/* Mystery function with a bug or two
 *
 * 15-122 Principles of Imperative Computation, Spring 2011
 * Frank Pfenning
 */

int pow (int x, int y)
//@requires y >= 0;
{ if (y == 0)
    return 1;
  else
    return x * pow(x, y-1);
}

int f (int x, int y)
//@requires y >= 0;
//@ensures \result == pow(x,y);
{
  int r = 1;
  int b = x; /* base */
  int e = y; /* exponent */
  while (e > 1) {
    if (e % 2 == 1) r = b * r;
    b = b * b;
    e = e / 2;
  }
  return r * b;
}
